	@charset "utf-8";
body{
    font-family: sans-serif;
    text-align: center;
    margin: 0;
    text-transform: uppercase;
}
h1{
    background-color: #D3D3D3;
    margin: 0;
    padding: .5em;
    font-weight: normal;
    text-decoration: underline;
}
h2{
    font-weight: normal;
    font-size: 1.7em;
    background-color: lightgray;
    padding: .3em;
}
.grid-container{
    margin: 1em auto;
    width: 60%;
    background-color: rgb(209, 209, 209);
}
/*              GRID
*/
.grid-item{
    padding: .5em;
    font-size: 1.3em;
}
.grid-item:nth-child(even){
    background-color: rgb(179, 179, 179);
}
.grid-item:nth-child(odd){
    background-color: rgb(141, 141, 141);
}
.grid-container{
    display: grid;

/*  100px -> tamanho fixo
    1fr -> medida em fração (tamanho disponível)===============*/
    grid-template-columns: 100px repeat(2, 1fr); 
    grid-template-rows: 100px 110px;
/* Podendo ser usado medidas em 'px' e '%' =================== */

/*  Espaçamento entre os elementos
    grid-row-gap: 1em;
    grid-column-gap: .5em; ===================*/
    grid-gap: 1.2em .5em;

}
.grid-item:nth-child(1){
    background-color: red;
 /* grid-row-start: 1;
    grid-row-end: 2;
    grid-column-start: 3;
    grid-column-end: -1; -> sempre o último 'grid line' ======  
*/  grid-row: 1 / 2;
    grid-column: 3 / -1;
}


/*              GRID I
*/
.grid-container-1{
    width: 90%;
    height: 30em;
    background-color: rgb(189, 189, 189);
    margin: 0 auto 4em;
}
.grid-item-1{
    background-color: rgb(9, 132, 173);
    display: flex;
    justify-content: center;
    align-items: center;
}
.grid-container-1{
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: 4em 2em 1fr 3em;
    grid-gap: 1em;
}
.grid-container-1 header{
    grid-column: 1 / -1;
}
.grid-container-1 nav{
    grid-column: 1 / 3;
}
.grid-container-1 aside{
    grid-row: 2 / -1 ;
    grid-column: 3 / 4;
}
.grid-container-1 main{
    grid-row: 3 / 4;
    grid-column: 1 / 3;
}
.grid-container-1 footer{
    border: 1px solid black;
    grid-row: 4 / 5;
    grid-column: 1 / -1;
/*  'footer' sobrepondo o 'aside'
*/
}


/*              GRID II
 */
.grid-container-2{
    width: 90%;
    height: 30em;
    background-color: rgb(189, 189, 189);
    margin: 0 auto 4em;
}
.grid-item-2{
    background-color: rgb(40, 182, 40);
    display: flex;
    justify-content: center;
    align-items: center;
}
/*  Criando templates com "GRID AREAS"    
*/
.grid-container-2{
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: 3em 1fr 2em  3em;
    grid-gap: 1em;
    
    grid-template-areas: 
        "header nav   nav"
        "header main  main"
        "header aside aside"
        "footer footer footer";                           
}
.grid-container-2 header{
    grid-area: header;
}
.grid-container-2 nav{
    grid-area: nav;
}
.grid-container-2 aside{
    grid-area: aside;
}
.grid-container-2 main{
    grid-area: main;
}
.grid-container-2 footer{
    grid-area: footer;
}


/*              GRID III
 */
.grid-container-3{
    width: 90%;
    height: 30em;
    background-color: rgb(189, 189, 189);
    margin: 0 auto 4em;
 }
.grid-item-3{
    background-color: rgb(194, 26, 26);
    display: flex;
    justify-content: center;
    align-items: center;
}
/* Templates com "grid line" nomeada.
 */
.grid-container-3{
    display: grid;
    grid-template-rows: [header-start] 4em [header-end nav-start aside-start] 2em [nav-end main-start] 1fr [main-end  aside-end footer-start] 3em [footer-end];
    grid-template-columns: [linha-1-col] 1fr [linha-2-col] 1fr [linha-3-col] 1fr [linha-4-col];
    grid-gap: 1em;
}
.grid-container-3 header{
    grid-row: header;
    grid-column: linha-1-col / linha-4-col;
}
.grid-container-3 nav{
    grid-row: nav;
    grid-column: linha-1-col / linha-3-col;
}
.grid-container-3 main{
    grid-row: main;
    grid-column: linha-1-col / linha-3-col;
}
.grid-container-3 aside{
    grid-row: aside;
    grid-column: linha-3-col / linha-4-col;
}
.grid-container-3 footer{
    grid-row: footer;
    grid-column: linha-1-col / linha-4-col;
}
/*Utilizando os nomes "start" e "end", pode ser abreviado na declaração nos elementos
 */


/*              GRID IV 
*/
.grid-container-4{
    width: 90%;
    /* height: 30em; */
    background-color: rgb(189, 189, 189);
    margin: 0 auto 4em;
 }
.grid-item-4{
    background-color: rgb(238, 255, 0);
    padding: 1em;
    display: flex;
    justify-content: center;
    align-items: center;
}
/* Grid Responsivo
*/
.grid-container-4{
    display: grid;
    grid-gap: .3em;
}
.grid-container-4{
    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
/*  - Usando o "auto-fit", "minmax" o conteúdo vai se encaixando dentro do container                          
    - Usando o "auto-fill", o container vai criando colunas implícitas                    =====*/

    grid-template-rows: ;


}
.grid-2{
    display: grid;
    grid-gap: .3em;
}
.grid-2{
    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
    grid-auto-rows: 100px;
/*  Todas as linhas criadas terão o mesmo tamanho   =====*/
}